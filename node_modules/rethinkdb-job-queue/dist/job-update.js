'use strict';

var logger = require('./logger')(module);
var Promise = require('bluebird');
var enums = require('./enums');
var queueGetJob = require('./queue-get-job');
var jobLog = require('./job-log');

module.exports = function jobUpdate(job) {
  logger('jobUpdate:  [' + job.id + ']');

  return Promise.resolve().then(function () {
    return queueGetJob(job.q, job.id);
  }).then(function (oldJobs) {
    var oldJobCopy = oldJobs[0].getCleanCopy();
    delete oldJobCopy.log;
    var log = jobLog.createLogObject(job, oldJobCopy, enums.message.jobUpdated, enums.log.information);
    job.log.push(log);
    return job.getCleanCopy();
  }).then(function (cleanJob) {
    return job.q.r.db(job.q.db).table(job.q.name).get(job.id).update(cleanJob, { returnChanges: false }).run(job.q.queryRunOptions);
  }).then(function (updateResult) {
    logger('updateResult', updateResult);
    logger('Event: updated', job.q.id, job.id);
    job.q.emit(enums.status.updated, job.q.id, job.id);
    return job;
  });
};