'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var logger = require('./logger')(module);
var Promise = require('bluebird');
var dbResult = require('./db-result');
var jobParse = require('./job-parse');

module.exports = function queueGetJob(q, jobOrId) {
  logger('queueGetJob: ', jobOrId);
  return Promise.resolve().then(function () {
    return jobParse.id(jobOrId);
  }).then(function (ids) {
    var _q$r$db$table;

    return (_q$r$db$table = q.r.db(q.db).table(q.name)).getAll.apply(_q$r$db$table, _toConsumableArray(ids)).run(q.queryRunOptions);
  }).then(function (jobsData) {
    logger('jobsData', jobsData);
    return dbResult.toJob(q, jobsData);
  });
};