'use strict';

var logger = require('./logger')(module);
var Promise = require('bluebird');
var dbAssertDatabase = require('./db-assert-database');
var dbAssertTable = require('./db-assert-table');
var dbAssertIndex = require('./db-assert-index');

module.exports = function dbAssert(q) {
  logger('dbAssert');

  // The delay algorithm below is to prevent multiple Queue objects
  // attempting to create the database/table/indexes at the same time.
  // Before the delay was introduced it was possible to end up with two
  // databases in RethinkDB with the same name.
  var randomDelay = Math.floor(Math.random() * 1000);
  if (!q.master) {
    randomDelay += q._databaseInitDelay;
  }

  return Promise.delay(randomDelay).then(function () {
    return dbAssertDatabase(q);
  }).then(function () {
    return dbAssertTable(q);
  }).then(function () {
    return dbAssertIndex(q);
  });
};